import{S as e,c as t,d as n,E as i,P as s,b as r,T as o,V as a}from"./index-DFvhHhsR.js";import"./react-vendor-Bon8Abu2.js";let c;const d=new Uint8Array(16);function l(){if(!c&&(c="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!c))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return c(d)}const h=[];for(let z=0;z<256;++z)h.push((z+256).toString(16).slice(1));const u={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};function f(e,t,n){if(u.randomUUID&&!e)return u.randomUUID();const i=(e=e||{}).random||(e.rng||l)();return i[6]=15&i[6]|64,i[8]=63&i[8]|128,function(e,t=0){return h[e[t+0]]+h[e[t+1]]+h[e[t+2]]+h[e[t+3]]+"-"+h[e[t+4]]+h[e[t+5]]+"-"+h[e[t+6]]+h[e[t+7]]+"-"+h[e[t+8]]+h[e[t+9]]+"-"+h[e[t+10]]+h[e[t+11]]+h[e[t+12]]+h[e[t+13]]+h[e[t+14]]+h[e[t+15]]}(i)}function m(e){return void 0===e.version}function p(e){return m(e)?e.serialize({verifySignatures:!1,requireAllSignatures:!1}):e.serialize()}var g=function(e,t,n,i){return new(n||(n=Promise))(function(s,r){function o(e){try{c(i.next(e))}catch(t){r(t)}}function a(e){try{c(i.throw(e))}catch(t){r(t)}}function c(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n(function(e){e(t)})).then(o,a)}c((i=i.apply(e,t||[])).next())})};function _(e){return g(this,void 0,void 0,function*(){try{return yield e.request({method:"wallet_getSnaps"}),!0}catch(t){return!1}})}const v=["solana:mainnet","solana:devnet","solana:testnet","solana:localnet"];function w(e){return v.includes(e)}var y,b,E,M,x,S,A=function(e,t,n,i){if("a"===n&&!i)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!i:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===n?i:"a"===n?i.call(e):i?i.value:t.get(e)},K=function(e,t,n,i,s){if("m"===i)throw new TypeError("Private method is not writable");if("a"===i&&!s)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!s:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===i?s.call(e,n):s?s.value=n:t.set(e,n),n};const I=v,T=[e,t,n];class j{get address(){return A(this,y,"f")}get publicKey(){return A(this,b,"f").slice()}get chains(){return A(this,E,"f").slice()}get features(){return A(this,M,"f").slice()}get label(){return A(this,x,"f")}get icon(){return A(this,S,"f")}constructor({address:e,publicKey:t,label:n,icon:i}){y.set(this,void 0),b.set(this,void 0),E.set(this,void 0),M.set(this,void 0),x.set(this,void 0),S.set(this,void 0),new.target===j&&Object.freeze(this),K(this,y,e,"f"),K(this,b,t,"f"),K(this,E,I,"f"),K(this,M,T,"f"),K(this,x,n,"f"),K(this,S,i,"f")}}y=new WeakMap,b=new WeakMap,E=new WeakMap,M=new WeakMap,x=new WeakMap,S=new WeakMap;var C=function(e,t,n,i){return new(n||(n=Promise))(function(s,r){function o(e){try{c(i.next(e))}catch(t){r(t)}}function a(e){try{c(i.throw(e))}catch(t){r(t)}}function c(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n(function(e){e(t)})).then(o,a)}c((i=i.apply(e,t||[])).next())})};class k extends i{constructor(e){super(),this._network="mainnet-beta",this._iframeParams={},this._element=null,this._iframe=null,this._publicKey=null,this._account=null,this._isConnected=!1,this._connectHandler=null,this._messageHandlers={},this._handleEvent=e=>{var t,n;switch(e.type){case"connect":return this._collapseIframe(),void((null===(t=e.data)||void 0===t?void 0:t.publicKey)?(this._publicKey=e.data.publicKey,this._isConnected=!0,this._connectHandler&&(this._connectHandler.resolve(),this._connectHandler=null),this._connected()):(this._connectHandler&&(this._connectHandler.reject(),this._connectHandler=null),this._disconnected()));case"disconnect":return this._connectHandler&&(this._connectHandler.reject(),this._connectHandler=null),void this._disconnected();case"accountChanged":return void((null===(n=e.data)||void 0===n?void 0:n.publicKey)?(this._publicKey=e.data.publicKey,this.emit("accountChanged",this.publicKey),this._standardConnected()):(this.emit("accountChanged",void 0),this._standardDisconnected()));default:return}},this._handleResize=e=>{"full"===e.resizeMode?"fullscreen"===e.params.mode?this._expandIframe():"hide"===e.params.mode&&this._collapseIframe():"coordinates"===e.resizeMode&&this._resizeIframe(e.params)},this._handleMessage=e=>{var t;if("solflareIframeToWalletAdapter"!==(null===(t=e.data)||void 0===t?void 0:t.channel))return;const n=e.data.data||{};if("event"===n.type)this._handleEvent(n.event);else if("resize"===n.type)this._handleResize(n);else if("response"===n.type&&this._messageHandlers[n.id]){const{resolve:e,reject:t}=this._messageHandlers[n.id];delete this._messageHandlers[n.id],n.error?t(n.error):e(n.result)}},this._removeElement=()=>{this._element&&(this._element.remove(),this._element=null)},this._removeDanglingElements=()=>{const e=document.getElementsByClassName("solflare-metamask-wallet-adapter-iframe");for(const t of e)t.parentElement&&t.remove()},this._injectElement=()=>{this._removeElement(),this._removeDanglingElements();const e=Object.assign(Object.assign({},this._iframeParams),{mm:!0,v:1,cluster:this._network||"mainnet-beta",origin:window.location.origin||"",title:document.title||""}),t=Object.keys(e).map(t=>`${t}=${encodeURIComponent(e[t])}`).join("&"),n=`${k.IFRAME_URL}?${t}`;this._element=document.createElement("div"),this._element.className="solflare-metamask-wallet-adapter-iframe",this._element.innerHTML=`\n      <iframe src='${n}' style='position: fixed; top: 0; bottom: 0; left: 0; right: 0; width: 100%; height: 100%; border: none; border-radius: 0; z-index: 99999; color-scheme: auto;' allowtransparency='true'></iframe>\n    `,document.body.appendChild(this._element),this._iframe=this._element.querySelector("iframe"),window.addEventListener("message",this._handleMessage,!1)},this._collapseIframe=()=>{this._iframe&&(this._iframe.style.top="",this._iframe.style.right="",this._iframe.style.height="2px",this._iframe.style.width="2px")},this._expandIframe=()=>{this._iframe&&(this._iframe.style.top="0px",this._iframe.style.bottom="0px",this._iframe.style.left="0px",this._iframe.style.right="0px",this._iframe.style.width="100%",this._iframe.style.height="100%")},this._resizeIframe=e=>{this._iframe&&(this._iframe.style.top=isFinite(e.top)?`${e.top}px`:"",this._iframe.style.bottom=isFinite(e.bottom)?`${e.bottom}px`:"",this._iframe.style.left=isFinite(e.left)?`${e.left}px`:"",this._iframe.style.right=isFinite(e.right)?`${e.right}px`:"",this._iframe.style.width=isFinite(e.width)?`${e.width}px`:e.width,this._iframe.style.height=isFinite(e.height)?`${e.height}px`:e.height)},this._sendIframeMessage=e=>{if(!this.connected||!this.publicKey)throw new Error("Wallet not connected");return new Promise((t,n)=>{var i,s;const r=f();this._messageHandlers[r]={resolve:t,reject:n},null===(s=null===(i=this._iframe)||void 0===i?void 0:i.contentWindow)||void 0===s||s.postMessage({channel:"solflareWalletAdapterToIframe",data:Object.assign({id:r},e)},"*")})},this._connected=()=>{this._isConnected=!0,this.emit("connect",this.publicKey),this._standardConnected()},this._disconnected=()=>{this._publicKey=null,this._isConnected=!1,window.removeEventListener("message",this._handleMessage,!1),this._removeElement(),this.emit("disconnect"),this._standardDisconnected()},this._standardConnected=()=>{if(!this.publicKey)return;const e=this.publicKey.toString();this._account&&this._account.address===e||(this._account=new j({address:e,publicKey:this.publicKey.toBytes()}),this.emit("standard_change",{accounts:this.standardAccounts}))},this._standardDisconnected=()=>{this._account&&(this._account=null,this.emit("standard_change",{accounts:this.standardAccounts}))},(null==e?void 0:e.network)&&(this._network=null==e?void 0:e.network),window.SolflareMetaMaskParams&&(this._iframeParams=Object.assign(Object.assign({},this._iframeParams),window.SolflareMetaMaskParams)),(null==e?void 0:e.params)&&(this._iframeParams=Object.assign(Object.assign({},this._iframeParams),null==e?void 0:e.params))}get publicKey(){return this._publicKey?new s(this._publicKey):null}get standardAccount(){return this._account}get standardAccounts(){return this._account?[this._account]:[]}get isConnected(){return this._isConnected}get connected(){return this.isConnected}get autoApprove(){return!1}connect(){return C(this,void 0,void 0,function*(){this.connected||(this._injectElement(),yield new Promise((e,t)=>{this._connectHandler={resolve:e,reject:t}}))})}disconnect(){return C(this,void 0,void 0,function*(){yield this._sendIframeMessage({method:"disconnect"}),this._disconnected()})}signTransaction(e){var t;return C(this,void 0,void 0,function*(){if(!this.connected||!this.publicKey)throw new Error("Wallet not connected");try{const t=p(e),n=yield this._sendIframeMessage({method:"signTransactionV2",params:{transaction:r.encode(t)}}),{transaction:i}=n;return m(e)?o.from(r.decode(i)):a.deserialize(r.decode(i))}catch(n){throw new Error((null===(t=null==n?void 0:n.toString)||void 0===t?void 0:t.call(n))||"Failed to sign transaction")}})}signAllTransactions(e){var t;return C(this,void 0,void 0,function*(){if(!this.connected||!this.publicKey)throw new Error("Wallet not connected");try{const t=e.map(e=>p(e)),{transactions:n}=yield this._sendIframeMessage({method:"signAllTransactionsV2",params:{transactions:t.map(e=>r.encode(e))}});return n.map((t,n)=>m(e[n])?o.from(r.decode(t)):a.deserialize(r.decode(t)))}catch(n){throw new Error((null===(t=null==n?void 0:n.toString)||void 0===t?void 0:t.call(n))||"Failed to sign transactions")}})}signAndSendTransaction(e,t){var n;return C(this,void 0,void 0,function*(){if(!this.connected||!this.publicKey)throw new Error("Wallet not connected");try{const n=p(e),{signature:i}=yield this._sendIframeMessage({method:"signAndSendTransaction",params:{transaction:r.encode(n),options:t}});return i}catch(i){throw new Error((null===(n=null==i?void 0:i.toString)||void 0===n?void 0:n.call(i))||"Failed to sign and send transaction")}})}signMessage(e,t="utf8"){var n;return C(this,void 0,void 0,function*(){if(!this.connected||!this.publicKey)throw new Error("Wallet not connected");try{const{signature:n}=yield this._sendIframeMessage({method:"signMessage",params:{data:r.encode(e),display:t}});return Uint8Array.from(r.decode(n))}catch(i){throw new Error((null===(n=null==i?void 0:i.toString)||void 0===n?void 0:n.call(i))||"Failed to sign message")}})}sign(e,t="utf8"){return C(this,void 0,void 0,function*(){return yield this.signMessage(e,t)})}static isSupported(){return C(this,void 0,void 0,function*(){return!!(yield function(){return g(this,void 0,void 0,function*(){try{const e=window.ethereum;if(!e)return null;if(e.providers&&Array.isArray(e.providers)){const t=e.providers;for(const e of t)if(yield _(e))return e}if(e.detected&&Array.isArray(e.detected)){const t=e.detected;for(const e of t)if(yield _(e))return e}return(yield _(e))?e:null}catch(e){return null}})}())})}standardSignAndSendTransaction(...e){return C(this,void 0,void 0,function*(){if(!this.connected)throw new Error("not connected");const t=[];if(1===e.length){const{transaction:n,account:i,chain:s,options:o}=e[0],{minContextSlot:c,preflightCommitment:d,skipPreflight:l,maxRetries:h}=o||{};if(i!==this._account)throw new Error("invalid account");if(!w(s))throw new Error("invalid chain");const u=yield this.signAndSendTransaction(a.deserialize(n),{preflightCommitment:d,minContextSlot:c,maxRetries:h,skipPreflight:l});t.push({signature:r.decode(u)})}else if(e.length>1)for(const n of e)t.push(...yield this.standardSignAndSendTransaction(n));return t})}standardSignTransaction(...e){return C(this,void 0,void 0,function*(){if(!this.connected)throw new Error("not connected");const t=[];if(1===e.length){const{transaction:n,account:i,chain:s}=e[0];if(i!==this._account)throw new Error("invalid account");if(s&&!w(s))throw new Error("invalid chain");const r=yield this.signTransaction(a.deserialize(n));t.push({signedTransaction:r.serialize()})}else if(e.length>1){let n;for(const t of e){if(t.account!==this._account)throw new Error("invalid account");if(t.chain){if(!w(t.chain))throw new Error("invalid chain");if(n){if(t.chain!==n)throw new Error("conflicting chain")}else n=t.chain}}const i=e.map(({transaction:e})=>a.deserialize(e)),s=yield this.signAllTransactions(i);t.push(...s.map(e=>({signedTransaction:e.serialize()})))}return t})}standardSignMessage(...e){return C(this,void 0,void 0,function*(){if(!this.connected)throw new Error("not connected");const t=[];if(1===e.length){const{message:n,account:i}=e[0];if(i!==this._account)throw new Error("invalid account");const s=yield this.signMessage(n);t.push({signedMessage:n,signature:s})}else if(e.length>1)for(const n of e)t.push(...yield this.standardSignMessage(n));return t})}}k.IFRAME_URL="https://widget.solflare.com/";export{j as StandardSolflareMetaMaskWalletAccount,k as default};
